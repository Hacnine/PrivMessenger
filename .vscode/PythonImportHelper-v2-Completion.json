[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "resttest",
        "description": "resttest",
        "isExtraImport": true,
        "detail": "resttest",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "rest_framework",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "rest_framework",
        "description": "rest_framework",
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "JSONRenderer",
        "importPath": "rest_framework.renderers",
        "description": "rest_framework.renderers",
        "isExtraImport": true,
        "detail": "rest_framework.renderers",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "csrf_exempt",
        "importPath": "django.views.decorators.csrf",
        "description": "django.views.decorators.csrf",
        "isExtraImport": true,
        "detail": "django.views.decorators.csrf",
        "documentation": {}
    },
    {
        "label": "io",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "io",
        "description": "io",
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "JSONParser",
        "importPath": "rest_framework.parsers",
        "description": "rest_framework.parsers",
        "isExtraImport": true,
        "detail": "rest_framework.parsers",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "dummyprojectbackend.asgi",
        "description": "dummyprojectbackend.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "dummyprojectbackend.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "dummyprojectbackend.settings",
        "description": "dummyprojectbackend.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-adnazvpoyik3q+(k12$%!y!ancwtm&g!zc3u5m%_e3v!)0xr3l'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "dummyprojectbackend.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "dummyprojectbackend.settings",
        "description": "dummyprojectbackend.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-adnazvpoyik3q+(k12$%!y!ancwtm&g!zc3u5m%_e3v!)0xr3l'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "dummyprojectbackend.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "dummyprojectbackend.settings",
        "description": "dummyprojectbackend.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "dummyprojectbackend.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "dummyprojectbackend.settings",
        "description": "dummyprojectbackend.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',",
        "detail": "dummyprojectbackend.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "dummyprojectbackend.settings",
        "description": "dummyprojectbackend.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    'corsheaders',\n    'users',",
        "detail": "dummyprojectbackend.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "dummyprojectbackend.settings",
        "description": "dummyprojectbackend.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'corsheaders.middleware.CorsMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]",
        "detail": "dummyprojectbackend.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "dummyprojectbackend.settings",
        "description": "dummyprojectbackend.settings",
        "peekOfCode": "ROOT_URLCONF = 'dummyprojectbackend.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "dummyprojectbackend.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "dummyprojectbackend.settings",
        "description": "dummyprojectbackend.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "dummyprojectbackend.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "dummyprojectbackend.settings",
        "description": "dummyprojectbackend.settings",
        "peekOfCode": "WSGI_APPLICATION = 'dummyprojectbackend.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "dummyprojectbackend.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "dummyprojectbackend.settings",
        "description": "dummyprojectbackend.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "dummyprojectbackend.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "dummyprojectbackend.settings",
        "description": "dummyprojectbackend.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "dummyprojectbackend.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "dummyprojectbackend.settings",
        "description": "dummyprojectbackend.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nCORS_ALLOWED_ORIGINS = [\n    \"http://localhost:5173\",  # Adjust this to match the origin of your React app\n]\nCSRF_TRUSTED_ORIGINS = [",
        "detail": "dummyprojectbackend.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "dummyprojectbackend.settings",
        "description": "dummyprojectbackend.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nCORS_ALLOWED_ORIGINS = [\n    \"http://localhost:5173\",  # Adjust this to match the origin of your React app\n]\nCSRF_TRUSTED_ORIGINS = [\n    \"http://localhost:5173\",",
        "detail": "dummyprojectbackend.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "dummyprojectbackend.settings",
        "description": "dummyprojectbackend.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nCORS_ALLOWED_ORIGINS = [\n    \"http://localhost:5173\",  # Adjust this to match the origin of your React app\n]\nCSRF_TRUSTED_ORIGINS = [\n    \"http://localhost:5173\",\n]",
        "detail": "dummyprojectbackend.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "dummyprojectbackend.settings",
        "description": "dummyprojectbackend.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nCORS_ALLOWED_ORIGINS = [\n    \"http://localhost:5173\",  # Adjust this to match the origin of your React app\n]\nCSRF_TRUSTED_ORIGINS = [\n    \"http://localhost:5173\",\n]\n# Optional: Allow all headers and methods for simplicity",
        "detail": "dummyprojectbackend.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOWED_ORIGINS",
        "kind": 5,
        "importPath": "dummyprojectbackend.settings",
        "description": "dummyprojectbackend.settings",
        "peekOfCode": "CORS_ALLOWED_ORIGINS = [\n    \"http://localhost:5173\",  # Adjust this to match the origin of your React app\n]\nCSRF_TRUSTED_ORIGINS = [\n    \"http://localhost:5173\",\n]\n# Optional: Allow all headers and methods for simplicity\nCORS_ALLOW_ALL_ORIGINS = True\nSTATIC_URL = 'static/'\n# Default primary key field type",
        "detail": "dummyprojectbackend.settings",
        "documentation": {}
    },
    {
        "label": "CSRF_TRUSTED_ORIGINS",
        "kind": 5,
        "importPath": "dummyprojectbackend.settings",
        "description": "dummyprojectbackend.settings",
        "peekOfCode": "CSRF_TRUSTED_ORIGINS = [\n    \"http://localhost:5173\",\n]\n# Optional: Allow all headers and methods for simplicity\nCORS_ALLOW_ALL_ORIGINS = True\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "dummyprojectbackend.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOW_ALL_ORIGINS",
        "kind": 5,
        "importPath": "dummyprojectbackend.settings",
        "description": "dummyprojectbackend.settings",
        "peekOfCode": "CORS_ALLOW_ALL_ORIGINS = True\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "dummyprojectbackend.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "dummyprojectbackend.settings",
        "description": "dummyprojectbackend.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "dummyprojectbackend.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "dummyprojectbackend.settings",
        "description": "dummyprojectbackend.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "dummyprojectbackend.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "dummyprojectbackend.urls",
        "description": "dummyprojectbackend.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('course/', include('resttest.urls'))\n]",
        "detail": "dummyprojectbackend.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "dummyprojectbackend.wsgi",
        "description": "dummyprojectbackend.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "dummyprojectbackend.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "resttest.migrations.0001_initial",
        "description": "resttest.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Course',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('teacher_name', models.CharField(max_length=50)),",
        "detail": "resttest.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "CourseModel",
        "kind": 6,
        "importPath": "resttest.admin",
        "description": "resttest.admin",
        "peekOfCode": "class CourseModel(admin.ModelAdmin):\n    list_display = [\"teacher_name\", \"student_name\", \"course_duration\", \"seat\"]",
        "detail": "resttest.admin",
        "documentation": {}
    },
    {
        "label": "ResttestConfig",
        "kind": 6,
        "importPath": "resttest.apps",
        "description": "resttest.apps",
        "peekOfCode": "class ResttestConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'resttest'",
        "detail": "resttest.apps",
        "documentation": {}
    },
    {
        "label": {
            "name": "",
            "kind": 6,
            "peekOfCode": "class  Course(models.Model):\n  teacher_name = models.CharField(max_length=50)\n  student_name = models.CharField(max_length=50)\n  course_duration = models.IntegerField()\n  seat = models.IntegerField()\n  def __str__(self):\n    return f'Course: {self.teacher_name} {self.student_name} {self.seat}'"
        },
        "kind": 6,
        "importPath": "resttest.models",
        "description": "resttest.models",
        "peekOfCode": "class  Course(models.Model):\n  teacher_name = models.CharField(max_length=50)\n  student_name = models.CharField(max_length=50)\n  course_duration = models.IntegerField()\n  seat = models.IntegerField()\n  def __str__(self):\n    return f'Course: {self.teacher_name} {self.student_name} {self.seat}'",
        "detail": "resttest.models",
        "documentation": {}
    },
    {
        "label": "CourseSerializer",
        "kind": 6,
        "importPath": "resttest.serializers",
        "description": "resttest.serializers",
        "peekOfCode": "class CourseSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Course\n        fields = ['teacher_name', 'student_name', 'course_duration', 'seat']\n    def create(self, validated_data):\n        return Course.objects.create(**validated_data)\n# from rest_framework import serializers\n# from .models import Course\n# class CourseSerializer(serializers.Serializer):\n#     teacher_name = serializers.CharField(max_length=50)",
        "detail": "resttest.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "resttest.urls",
        "description": "resttest.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", views.course_info, name=\"course_index\"),\n    path(\"<int:pk>\", views.single_course_info, name=\"course_detail\"),\n    path('createcourse/', views.create_course, name=\"createcourse\")\n]",
        "detail": "resttest.urls",
        "documentation": {}
    },
    {
        "label": "course_info",
        "kind": 2,
        "importPath": "resttest.views",
        "description": "resttest.views",
        "peekOfCode": "def course_info(request):\n    # complex data\n    course = Course.objects.all()\n    # python dict\n    serializer = CourseSerializer(course, many=True)\n    # render Json\n    json_data = JSONRenderer().render(serializer.data)\n    # json sent to User\n    return HttpResponse(json_data, content_type=\"application/json\")\n# Model instance",
        "detail": "resttest.views",
        "documentation": {}
    },
    {
        "label": "single_course_info",
        "kind": 2,
        "importPath": "resttest.views",
        "description": "resttest.views",
        "peekOfCode": "def single_course_info(request, pk):\n    # complex data\n    course = Course.objects.get(id=pk)\n    # python dict\n    serializer = CourseSerializer(course)\n    # render Json\n    json_data = JSONRenderer().render(serializer.data)\n    # json sent to User\n    return HttpResponse(json_data, content_type=\"application/json\")\n@csrf_exempt",
        "detail": "resttest.views",
        "documentation": {}
    },
    {
        "label": "create_course",
        "kind": 2,
        "importPath": "resttest.views",
        "description": "resttest.views",
        "peekOfCode": "def create_course(request):\n    if request.method == 'POST':\n        json_data = request.body\n        # json to stream\n        stream = io.BytesIO(json_data)\n        # stream to python\n        pythondata = JSONParser().parse(stream)\n        # python to complex\n        serializer = CourseSerializer(data=pythondata)\n        if serializer.is_valid():",
        "detail": "resttest.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "users.migrations.0001_initial",
        "description": "users.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Course',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('teacher_name', models.CharField(max_length=50)),",
        "detail": "users.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "UsersConfig",
        "kind": 6,
        "importPath": "users.apps",
        "description": "users.apps",
        "peekOfCode": "class UsersConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'users'",
        "detail": "users.apps",
        "documentation": {}
    },
    {
        "label": {
            "name": "",
            "kind": 6,
            "peekOfCode": "class  Course(models.Model):\n  teacher_name = models.CharField(max_length=50)\n  student_name = models.CharField(max_length=50)\n  course_duration = models.IntegerField()\n  seat = models.IntegerField()\n  def __str__(self):\n    return f'Course: {self.teacher_name} {self.student_name} {self.seat}'"
        },
        "kind": 6,
        "importPath": "users.models",
        "description": "users.models",
        "peekOfCode": "class  Course(models.Model):\n  teacher_name = models.CharField(max_length=50)\n  student_name = models.CharField(max_length=50)\n  course_duration = models.IntegerField()\n  seat = models.IntegerField()\n  def __str__(self):\n    return f'Course: {self.teacher_name} {self.student_name} {self.seat}'",
        "detail": "users.models",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'dummyprojectbackend.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]